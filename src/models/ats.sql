-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Company"
(
    "Id" bigserial NOT NULL,
    "Name" character varying(250) NOT NULL,
    "CompanyTypeId" bigserial NOT NULL,
    "UserId" bigserial NOT NULL,
    PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."CompanyType"
(
    "Id" bigserial NOT NULL,
    "Type" character varying(100) NOT NULL,
    PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."Job"
(
    "Id" bigserial NOT NULL,
    "Title" character varying(255) NOT NULL,
    "PayRangeStart" numeric(10, 2) NOT NULL,
    "PayRangeEnd" numeric(10, 2) NOT NULL,
    "Description" text NOT NULL,
    "Location" character varying(250) NOT NULL,
    "CompanyId" bigserial NOT NULL,
    PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."Applicant"
(
    "Id" bigserial NOT NULL,
    "Firstname" character varying(255) NOT NULL,
    "Lastname" character varying(255) NOT NULL,
    "Gender" character varying(10) NOT NULL,
    "Email" character varying(255) NOT NULL,
    "Password" character varying(255) NOT NULL,
    "Phone" bigint,
    "LinkedIn" character varying(255),
    "FullAddress" character varying(255),
    "CoverLetter" text,
    PRIMARY KEY ("Id"),
    CONSTRAINT "ApplicantEmailUnique" UNIQUE ("Email")
);

CREATE TABLE IF NOT EXISTS public."Contact"
(
    "Id" bigserial NOT NULL,
    "Name" character varying(500) NOT NULL,
    "Email" character varying(255) NOT NULL,
    "Message" text NOT NULL,
    PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."User"
(
    "Id" bigserial NOT NULL,
    "Firstname" character varying(100) NOT NULL,
    "Lastname" character varying(100) NOT NULL,
    "Email" character varying(255) NOT NULL,
    "Password" character varying(255) NOT NULL,
    PRIMARY KEY ("Id"),
    CONSTRAINT "UserEmailUnique" UNIQUE ("Email")
);

CREATE TABLE IF NOT EXISTS public."JobApplicant"
(
    "Id" bigserial NOT NULL,
    "JobId" bigserial NOT NULL,
    "ApplicantId" bigserial NOT NULL,
    "AppliedOn" date NOT NULL DEFAULT NOW(),
    "IsSeen" boolean NOT NULL DEFAULT FALSE,
    "CoverLetter" text,
    PRIMARY KEY ("Id")
);

ALTER TABLE IF EXISTS public."Company"
    ADD CONSTRAINT "CompanyType_Company_fk1" FOREIGN KEY ("CompanyTypeId")
    REFERENCES public."CompanyType" ("Id") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public."Company"
    ADD CONSTRAINT "User_Company_fk1" FOREIGN KEY ("UserId")
    REFERENCES public."User" ("Id") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public."Job"
    ADD CONSTRAINT "Company_Job_fk1" FOREIGN KEY ("CompanyId")
    REFERENCES public."Company" ("Id") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public."JobApplicant"
    ADD CONSTRAINT "Applicant_JobApplicant_fk2" FOREIGN KEY ("ApplicantId")
    REFERENCES public."Applicant" ("Id") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public."JobApplicant"
    ADD CONSTRAINT "Job_JobApplicant_fk1" FOREIGN KEY ("JobId")
    REFERENCES public."Job" ("Id") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;

END;

INSERT INTO "public"."CompanyType" ("Type") VALUES
    ('Manufacturing')
,   ('Construction')
,   ('Agriculture')
,   ('Transportation')
,   ('Energy')
,   ('Hospitality')
,   ('Finance')
,   ('Entertainment')
,   ('Information Technology');
